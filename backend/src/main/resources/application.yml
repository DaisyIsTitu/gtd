# 기본 설정
spring:
  profiles:
    active: local
  
  application:
    name: gtd-timeblocking
    
  jackson:
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: NON_NULL
    time-zone: Asia/Seoul
    
  jpa:
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        show_sql: false
        
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration

# 서버 설정
server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# 액추에이터 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  info:
    env:
      enabled: true

# 로깅 설정
logging:
  level:
    com.gtd.timeblocking: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
# 로컬 개발 환경
spring:
  config:
    activate:
      on-profile: local
      
  datasource:
    url: jdbc:postgresql://localhost:5432/gtd_timeblocking
    username: gtd_user
    password: gtd_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 600000
      
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        
  security:
    user:
      name: admin
      password: admin123
      roles: ADMIN

# JWT 설정
jwt:
  secret: local-development-secret-key-change-in-production
  expiration: 86400000 # 24시간 (밀리초)
  refresh-expiration: 604800000 # 7일 (밀리초)

# Google Calendar API (개발용 더미 설정)
google:
  calendar:
    application-name: GTD Timeblocking Local
    credentials-file-path: # 실제 credentials.json 파일 경로로 설정
    redirect-uri: http://localhost:8080/oauth2/callback/google

---
# 테스트 환경
spring:
  config:
    activate:
      on-profile: test
      
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    
  h2:
    console:
      enabled: true
      
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        
  flyway:
    enabled: false

# 테스트용 JWT 설정
jwt:
  secret: test-secret-key-for-testing-only
  expiration: 3600000 # 1시간
  refresh-expiration: 7200000 # 2시간

---
# 개발 환경 (통합 테스트)
spring:
  config:
    activate:
      on-profile: dev
      
  datasource:
    url: jdbc:postgresql://dev-db:5432/gtd_timeblocking
    username: ${DB_USERNAME:gtd_user}
    password: ${DB_PASSWORD:gtd_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 600000
      
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

# JWT 설정
jwt:
  secret: ${JWT_SECRET:dev-secret-key-replace-with-secure-key}
  expiration: 86400000 # 24시간
  refresh-expiration: 604800000 # 7일

# Google Calendar API
google:
  calendar:
    application-name: GTD Timeblocking Dev
    credentials-file-path: ${GOOGLE_CREDENTIALS_FILE}
    redirect-uri: ${GOOGLE_REDIRECT_URI:http://dev-api.gtd-timeblocking.com/oauth2/callback/google}

---
# 운영 환경
spring:
  config:
    activate:
      on-profile: prod
      
  datasource:
    url: ${DATABASE_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 30
      minimum-idle: 10
      idle-timeout: 300000
      max-lifetime: 600000
      
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

# 로깅 설정 (운영)
logging:
  level:
    com.gtd.timeblocking: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    root: WARN
  file:
    name: /var/log/gtd-timeblocking/application.log

# JWT 설정 (운영)
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000 # 24시간
  refresh-expiration: 604800000 # 7일

# Google Calendar API (운영)
google:
  calendar:
    application-name: GTD Timeblocking
    credentials-file-path: ${GOOGLE_CREDENTIALS_FILE}
    redirect-uri: ${GOOGLE_REDIRECT_URI}