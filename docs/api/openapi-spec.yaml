openapi: 3.0.3
info:
  title: Todo Time-blocking API
  description: Google Calendar와 연동하여 할 일을 자동으로 최적의 시간에 배치해주는 스마트 시간 관리 웹 애플리케이션 API
  version: "1.0.0"
  contact:
    name: API Support
    email: support@todo-timeblocking.com
  license:
    name: MIT

servers:
  - url: https://api.todo-timeblocking.com/api/v1
    description: Production server
  - url: https://dev-api.todo-timeblocking.com/api/v1
    description: Development server

security:
  - BearerAuth: []

paths:
  # 인증 관련
  /auth/google:
    get:
      tags:
        - Authentication
      summary: Google OAuth 인증 URL 생성
      description: Google OAuth 인증을 위한 URL을 생성합니다
      security: []
      responses:
        '200':
          description: 인증 URL 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUrlResponse'

  /auth/google/callback:
    post:
      tags:
        - Authentication
      summary: Google OAuth 콜백 처리
      description: Google OAuth 인증 콜백을 처리하고 토큰을 발급합니다
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthCallbackRequest'
      responses:
        '200':
          description: 인증 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: 액세스 토큰 갱신
      description: 리프레시 토큰을 사용하여 새로운 액세스 토큰을 발급합니다
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: 토큰 갱신 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'

  # 사용자 관련
  /users/me:
    get:
      tags:
        - Users
      summary: 현재 사용자 프로필 조회
      description: 인증된 사용자의 프로필 정보를 조회합니다
      responses:
        '200':
          description: 사용자 프로필 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

    put:
      tags:
        - Users
      summary: 사용자 설정 업데이트
      description: 사용자의 설정 정보를 업데이트합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: 사용자 설정 업데이트 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  # 할일 관리
  /todos:
    get:
      tags:
        - Todos
      summary: 할일 목록 조회
      description: 사용자의 할일 목록을 조회합니다
      parameters:
        - name: status
          in: query
          description: 할일 상태 필터
          schema:
            $ref: '#/components/schemas/TodoStatus'
        - name: category
          in: query
          description: 할일 카테고리 필터
          schema:
            $ref: '#/components/schemas/TodoCategory'
        - name: priority
          in: query
          description: 할일 우선순위 필터
          schema:
            $ref: '#/components/schemas/TodoPriority'
        - name: page
          in: query
          description: 페이지 번호 (0부터 시작)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: size
          in: query
          description: 페이지 크기
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: sort
          in: query
          description: 정렬 기준
          schema:
            type: string
            enum: [createdAt, updatedAt, deadline, priority]
            default: createdAt
        - name: direction
          in: query
          description: 정렬 방향
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: 할일 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoListResponse'

    post:
      tags:
        - Todos
      summary: 할일 생성
      description: 새로운 할일을 생성합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTodoRequest'
      responses:
        '201':
          description: 할일 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /todos/{todoId}:
    get:
      tags:
        - Todos
      summary: 할일 상세 조회
      description: 특정 할일의 상세 정보를 조회합니다
      parameters:
        - name: todoId
          in: path
          required: true
          description: 할일 ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 할일 상세 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDetailResponse'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags:
        - Todos
      summary: 할일 수정
      description: 할일 정보를 수정합니다
      parameters:
        - name: todoId
          in: path
          required: true
          description: 할일 ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodoRequest'
      responses:
        '200':
          description: 할일 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoResponse'

    delete:
      tags:
        - Todos
      summary: 할일 삭제
      description: 할일을 삭제합니다
      parameters:
        - name: todoId
          in: path
          required: true
          description: 할일 ID
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 할일 삭제 성공

  /todos/{todoId}/status:
    patch:
      tags:
        - Todos
      summary: 할일 상태 변경
      description: 할일의 상태를 변경합니다
      parameters:
        - name: todoId
          in: path
          required: true
          description: 할일 ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodoStatusRequest'
      responses:
        '200':
          description: 할일 상태 변경 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  # 놓친 할일 관리
  /todos/missed:
    get:
      tags:
        - Todos
      summary: 놓친 할일 목록 조회
      description: 놓친 할일 목록을 조회합니다
      responses:
        '200':
          description: 놓친 할일 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissedTodosResponse'

  /todos/missed/reschedule:
    post:
      tags:
        - Todos
      summary: 놓친 할일 재배치
      description: 놓친 할일들을 자동으로 재배치합니다
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RescheduleMissedTodosRequest'
      responses:
        '200':
          description: 재배치 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulingResponse'

  # 스케줄링
  /scheduling/auto-schedule:
    post:
      tags:
        - Scheduling
      summary: 자동 스케줄링 실행
      description: 할일들을 자동으로 스케줄링합니다
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoScheduleRequest'
      responses:
        '200':
          description: 스케줄링 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulingResponse'

  /scheduling/available-slots:
    get:
      tags:
        - Scheduling
      summary: 가용 시간 슬롯 조회
      description: 지정된 기간 내 가용 시간 슬롯을 조회합니다
      parameters:
        - name: startDate
          in: query
          required: true
          description: 시작 날짜 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          description: 종료 날짜 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: minDuration
          in: query
          description: 최소 시간(분)
          schema:
            type: integer
            minimum: 30
            default: 30
      responses:
        '200':
          description: 가용 시간 슬롯 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableSlotsResponse'

  # 캘린더 연동
  /calendar/sync:
    post:
      tags:
        - Calendar
      summary: Google Calendar 동기화
      description: Google Calendar와 동기화합니다
      responses:
        '200':
          description: 동기화 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarSyncResponse'

  /calendar/events:
    get:
      tags:
        - Calendar
      summary: 캘린더 이벤트 조회
      description: 지정된 기간의 캘린더 이벤트를 조회합니다
      parameters:
        - name: startDate
          in: query
          required: true
          description: 시작 날짜 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          description: 종료 날짜 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: source
          in: query
          description: 이벤트 소스
          schema:
            type: string
            enum: [google, todo, all]
            default: all
      responses:
        '200':
          description: 캘린더 이벤트 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarEventsResponse'

  # 통계 및 분석
  /analytics/completion-rate:
    get:
      tags:
        - Analytics
      summary: 완료율 통계 조회
      description: 할일 완료율 통계를 조회합니다
      parameters:
        - name: startDate
          in: query
          description: 시작 날짜 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: 종료 날짜 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: groupBy
          in: query
          description: 그룹화 단위
          schema:
            type: string
            enum: [day, week, month]
            default: week
      responses:
        '200':
          description: 완료율 통계 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionRateResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # Enums
    TodoStatus:
      type: string
      enum: [WAITING, SCHEDULED, SPLIT, IN_PROGRESS, MISSED, COMPLETED]

    TodoCategory:
      type: string
      enum: [WORK, PERSONAL]

    TodoPriority:
      type: string
      enum: [HIGH, MEDIUM, LOW]

    # Base schemas
    Todo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        estimatedDuration:
          type: integer
          description: 예상 소요시간(분)
          minimum: 30
        category:
          $ref: '#/components/schemas/TodoCategory'
        priority:
          $ref: '#/components/schemas/TodoPriority'
        status:
          $ref: '#/components/schemas/TodoStatus'
        deadline:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    TodoSchedule:
      type: object
      properties:
        id:
          type: integer
          format: int64
        todoId:
          type: integer
          format: int64
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        actualDuration:
          type: integer
        isCompleted:
          type: boolean
        splitIndex:
          type: integer
        splitTotal:
          type: integer
        createdAt:
          type: string
          format: date-time

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        timezone:
          type: string
        workStartTime:
          type: string
          format: time
        workEndTime:
          type: string
          format: time
        createdAt:
          type: string
          format: date-time

    # Request schemas
    OAuthCallbackRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
        state:
          type: string

    RefreshTokenRequest:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string

    UpdateUserRequest:
      type: object
      properties:
        timezone:
          type: string
        workStartTime:
          type: string
          format: time
        workEndTime:
          type: string
          format: time

    CreateTodoRequest:
      type: object
      required:
        - title
        - estimatedDuration
        - category
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        estimatedDuration:
          type: integer
          minimum: 30
        category:
          $ref: '#/components/schemas/TodoCategory'
        priority:
          $ref: '#/components/schemas/TodoPriority'
          default: MEDIUM
        deadline:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string

    UpdateTodoRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        estimatedDuration:
          type: integer
          minimum: 30
        category:
          $ref: '#/components/schemas/TodoCategory'
        priority:
          $ref: '#/components/schemas/TodoPriority'
        deadline:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string

    UpdateTodoStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/TodoStatus'

    AutoScheduleRequest:
      type: object
      properties:
        todoIds:
          type: array
          items:
            type: integer
            format: int64
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date

    RescheduleMissedTodosRequest:
      type: object
      properties:
        todoIds:
          type: array
          items:
            type: integer
            format: int64

    # Response schemas
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
        timestamp:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: string
        timestamp:
          type: string
          format: date-time

    AuthUrlResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                authUrl:
                  type: string
                  format: uri

    TokenResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                accessToken:
                  type: string
                refreshToken:
                  type: string
                expiresIn:
                  type: integer
                user:
                  $ref: '#/components/schemas/User'

    UserProfileResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/User'

    TodoResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Todo'

    TodoDetailResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              allOf:
                - $ref: '#/components/schemas/Todo'
                - type: object
                  properties:
                    schedules:
                      type: array
                      items:
                        $ref: '#/components/schemas/TodoSchedule'

    TodoListResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                content:
                  type: array
                  items:
                    $ref: '#/components/schemas/Todo'
                page:
                  type: object
                  properties:
                    number:
                      type: integer
                    size:
                      type: integer
                    totalElements:
                      type: integer
                    totalPages:
                      type: integer

    MissedTodosResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                missedTodos:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                      title:
                        type: string
                      originalSchedule:
                        type: object
                        properties:
                          startTime:
                            type: string
                            format: date-time
                          endTime:
                            type: string
                            format: date-time
                      missedAt:
                        type: string
                        format: date-time
                      boostedPriority:
                        $ref: '#/components/schemas/TodoPriority'

    SchedulingResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                scheduledTodos:
                  type: array
                  items:
                    type: object
                    properties:
                      todoId:
                        type: integer
                        format: int64
                      schedules:
                        type: array
                        items:
                          $ref: '#/components/schemas/TodoSchedule'
                unscheduledTodos:
                  type: array
                  items:
                    type: integer
                    format: int64
                totalScheduled:
                  type: integer
                totalUnscheduled:
                  type: integer

    AvailableSlotsResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                slots:
                  type: array
                  items:
                    type: object
                    properties:
                      date:
                        type: string
                        format: date
                      availableSlots:
                        type: array
                        items:
                          type: object
                          properties:
                            startTime:
                              type: string
                              format: time
                            endTime:
                              type: string
                              format: time
                            duration:
                              type: integer
                      totalAvailable:
                        type: integer

    CalendarSyncResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                syncedEvents:
                  type: integer
                lastSyncAt:
                  type: string
                  format: date-time

    CalendarEventsResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                events:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      startTime:
                        type: string
                        format: date-time
                      endTime:
                        type: string
                        format: date-time
                      source:
                        type: string
                        enum: [google, todo]
                      color:
                        type: string
                      todoId:
                        type: integer
                        format: int64
                      scheduleId:
                        type: integer
                        format: int64

    CompletionRateResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                completionRate:
                  type: number
                  format: float
                totalTodos:
                  type: integer
                completedTodos:
                  type: integer
                missedTodos:
                  type: integer
                inProgressTodos:
                  type: integer

  responses:
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: 인증 실패
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Forbidden:
      description: 권한 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: 리소스를 찾을 수 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: 서버 내부 오류
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'